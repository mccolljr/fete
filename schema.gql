schema {
  query: QueryRoot
  mutation: MutationRoot
}

type UserAggregate {
  uuid: String!
  firstName: String!
  lastName: String!
  username: String!
  email: String!
  hashedPassword: String!
  lastLogin: DateTime
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

input ArgumentsInput {
  username: String!
}

type QueryRoot {
  FindUserByUsername(username: String!): FindUserByUsernameResult
  EchoUser(wholeUser: ArgumentsInput = null): EchoUserResult
}

type FindUserByUsernameResult {
  user: UserAggregate
}

type EchoUserResult {
  uuid: String!
  firstName: String!
  lastName: String!
  username: String!
  email: String!
  hashedPassword: String!
  lastLogin: DateTime
}

type MutationRoot {
  CreateUserCommand(email: String!, firstName: String!, lastName: String!, password: String!, username: String!): CreateUserCommandResult
  LogInCommand(password: String!, username: String!): LogInCommandResult
}

type CreateUserCommandResult {
  ok: Boolean!
}

type LogInCommandResult {
  success: UserAggregate
  failure: String
}
